name: Compile and Push BRid37 opAIO Fork

on:
  push:
    branches: [ bp-BPilot-BANNABLE ]
  pull_request:
    branches: [ bp-BPilot-BANNABLE ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual run'
        required: false
        default: 'Manual trigger'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Docker and Install Dependencies
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          ubuntu:latest \
          bash -c "
          set -e
          apt-get update
          apt-get install -y \
            ca-certificates \
            clang \
            cppcheck \
            build-essential \
            gcc-arm-none-eabi \
            liblzma-dev \
            capnproto \
            libcapnp-dev \
            curl \
            libcurl4-openssl-dev \
            git \
            git-lfs \
            ffmpeg \
            libavformat-dev \
            libavcodec-dev \
            libavdevice-dev \
            libavutil-dev \
            libavfilter-dev \
            libbz2-dev \
            libeigen3-dev \
            libffi-dev \
            libglew-dev \
            libgles2-mesa-dev \
            libglfw3-dev \
            libglib2.0-0 \
            libqt5charts5-dev \
            libncurses5-dev \
            libssl-dev \
            libusb-1.0-0-dev \
            libzmq3-dev \
            libzstd-dev \
            libsqlite3-dev \
            libsystemd-dev \
            locales \
            opencl-headers \
            ocl-icd-libopencl1 \
            ocl-icd-opencl-dev \
            portaudio19-dev \
            qml-module-qtquick2 \
            qtmultimedia5-dev \
            qtdeclarative5-dev \
            qttools5-dev-tools \
            libqt5svg5-dev \
            libqt5serialbus5-dev \
            libqt5x11extras5-dev \
            libqt5opengl5-dev \
            qtbase5-dev \
            qtchooser \
            qt5-qmake \
            qtbase5-dev-tools \
            python3-dev \
            python3-venv \
            python3-smbus \
            libsodium-dev

          curl -sSL https://install.python-poetry.org | python3 -
          echo 'export PATH=\"/root/.local/bin:$PATH\"' >> /root/.bashrc
          source /root/.bashrc

          export COMMA_HOME=\$HOME/.comma
          export PARAMS_PATH=\$HOME/.comma/params
          export FROGPILOT_HOME=\$HOME/.frogpilot
          mkdir -p \$COMMA_HOME/params
          mkdir -p \$FROGPILOT_HOME
          mkdir -p \$HOME/.cache
          mkdir -p \$HOME/.config
          mkdir -p \$HOME/.local/share
          mkdir -p \$HOME/.cargo/bin

          poetry env use python3
          poetry install --no-root
          poetry run scons -j\$(nproc)
          "

    - name: Commit and push compiled files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Add compiled version [skip ci]" || echo "No changes to commit"
        git push

    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
